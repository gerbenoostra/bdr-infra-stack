---

- name: Purge current Anaconda installation
  file: path={{ anaconda_install_dir }} state=absent
  when: anaconda_force_install

- name: Check for current Anaconda installation
  stat: path={{ anaconda_install_dir }}
  register: tmp_anaconda_install

- name: Download anaconda
  get_url:
    url: "{{ anaconda_url }}"
    dest: /tmp/install-anaconda.sh
    mode: 0744
  when: tmp_anaconda_install.stat.exists == False

- name: Install Anaconda
  shell: /tmp/install-anaconda.sh -b -p {{ anaconda_install_dir }} -f
  when: tmp_anaconda_install.stat.exists == False

- name: Ensure anaconda is on PATH
  lineinfile:
    dest: /etc/bashrc
    regexp: "{{ anaconda_install_dir }}"
    line: "export PATH=$PATH:{{ anaconda_install_dir }}/bin"
    state: present


# Does not work when first started, todo: fix this later.
#- name: Update conda extensions to latest version
#  command: conda update nb_conda nb_conda_kernels nb_anacondacloud
#  when: tmp_anaconda_install.stat.exists == False


- name: Install nodejs
  package: name=nodejs state=present

- name: Install git
  package: name=git state=present


- name: Check if configurable-http-proxy is installed (fast way)
  stat: path=/usr/lib/node_modules/configurable-http-proxy
  register: tmp_proxy_installed

- name: Install configurable-http-proxy (npm)
  npm: name=configurable-http-proxy global=yes production=yes state=present
  when: tmp_proxy_installed.stat.exists == False

- name: Add jupyterhub group
  group: name=jupyterhub state=present


- name: Install sudospawner
  pip:
    name: "git+https://github.com/jupyter/sudospawner"
    executable: "{{ anaconda_install_dir}}/bin/pip"
    state: present
    editable: False
  when: tmp_anaconda_install.stat.exists == False

- name: Add required sudo privileges for sudospawner (1/4)
  lineinfile:
    dest: /etc/sudoers
    regexp: "Alias SUDOSPAWNER_CMD"
    line: "Cmnd_Alias SUDOSPAWNER_CMD = {{ anaconda_install_dir}}/bin/sudospawner"
    validate: "visudo -cf %s"
    state: present

- name: Add required sudo privileges for sudospawner (2/4)
  lineinfile:
    dest: /etc/sudoers
    regexp: "NOPASSWD:SUDOSPAWNER_CMD"
    line: "rhea ALL=(%jupyterhub) NOPASSWD:SUDOSPAWNER_CMD"
    validate: "visudo -cf %s"
    state: present

- name: Add required sudo privileges for sudospawner (3/4)
  lineinfile:
    dest: /etc/sudoers
    regexp: "secure_path"
    line: "Defaults secure_path = /sbin:/bin:/usr/sbin:/usr/bin:{{ anaconda_install_dir }}/bin"
    validate: "visudo -cf %s"
    state: present

- name: Add required sudo privileges for sudospawner (4/4)
  lineinfile:
    dest: /etc/sudoers
    regexp: "requiretty"
    line: "Defaults !requiretty"
    validate: "visudo -cf %s"
    state: present

- name: Disable SELinux
  selinux: policy=targeted state=disabled

- name: Allow node proxy to bind to port
  capabilities: path=/usr/bin/node capability=cap_net_bind_service=+ep state=present

- name: Add shadow group
  group: name=shadow state=present

- name: Allow shadow group to read from /etc/shadow
  file: path=/etc/shadow group=shadow mode=0040

- name: Create the rhea user
  user: name=rhea group=jupyterhub groups=shadow createhome=yes



- name: Create JupyterHub config dir
  file: state=directory dest=/etc/jupyterhub owner=rhea group=jupyterhub

- name: Configure JupyterHub
  template: src=jupyterhub_config.py.j2 dest=/etc/jupyterhub/jupyterhub_config.py mode=0744 owner=rhea group=jupyterhub


