---

- name: Check parameters
  assert:
    that:
      - spark_client_version is defined
      - spark_client_url is defined

- name: Update homebrew
  homebrew: update_homebrew=yes  ## upgrade_all=yes

- name: Ensure Java is installed
  homebrew_cask: name=java state=present

- set_fact:
    tmp_home: "{{ spark_client_install_dir }}/{{ spark_client_version }}"

- name: Purge current Spark client {{ spark_client_version }} installation
  file: path={{ tmp_home }} state=absent
  when: spark_client_force_install

- name: Check for current Spark client {{ spark_client_version }} installation
  stat: path={{ tmp_home }}
  register: tmp_install


- name: Create Spark client {{ spark_client_version }} install dir
  file: state=directory dest={{ tmp_home }}

- name: Download Spark client {{ spark_client_version }}
  get_url:
    url: "{{ spark_client_url }}"
    dest: "/tmp/spark-client-{{ spark_client_version }}.tgz"
    mode: 0644
  when: tmp_install.stat.exists == False

- name: Create current Spark client {{ spark_client_version }} install dir
  file: path={{ tmp_home }} state=directory
  when: tmp_install.stat.exists == False

- name: Unpack Spark client {{ spark_client_version }} (unarchive strip components is bugged)
  command: "tar --strip-components=1 -xf /tmp/spark-client-{{ spark_client_version }}.tgz -C {{ tmp_home }}"
  when: tmp_install.stat.exists == False

- name: Ensure existence of spark client dirs
  file: path={{ tmp_home }} recurse=yes state=directory
  when: tmp_install.stat.exists == False

- name: Define Outputs
  set_fact:
    spark_client: "{{ {'output': {'home': tmp_home , 'version': spark_client_version }} }}"

- name: Show spark_client outputs
  debug: var=spark_client
