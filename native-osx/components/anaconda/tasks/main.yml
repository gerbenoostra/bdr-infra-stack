---

- name: Purge current Anaconda installation
  file: path={{ anaconda_install_dir }} state=absent
  when: anaconda_force_install

- name: Check for current Anaconda installation
  stat: path={{ anaconda_install_dir }}
  register: tmp_anaconda_install

- name: Download anaconda
  get_url:
    url: "{{ anaconda_url }}"
    dest: /tmp/install-anaconda.sh
    mode: 0744
  when: tmp_anaconda_install.stat.exists == False

- name: Install Anaconda
  shell: /tmp/install-anaconda.sh -b -p {{ anaconda_install_dir }} -f
  when: tmp_anaconda_install.stat.exists == False

- name: Ensure anaconda is on PATH
  lineinfile:
    dest="~/.bash_profile"
    regexp=''
    insertafter=EOF
    create=False
    line='export ANACONDA_ROOT={{ anaconda_install_dir }}\nexport PATH=$ANACONDA_ROOT/bin:$PATH\nexport PYSPARK_DRIVER_PYTHON=$ANACONDA_ROOT/bin/ipython\nexport PYSPARK_PYTHON=$ANACONDA_ROOT/bin/python\n'
  when: tmp_anaconda_install.stat.exists == False

- name: Upgrade conda to latest version
  shell: conda update -y --quiet --prefix "{{ anaconda_install_dir }}" anaconda
  tags: update

- name: Install new nb_kernel plugin
  shell: conda install jupyter nb_conda nbpresent -y --quiet

- name: Install jupyter notebook pdf export
  shell: conda install --channel anaconda-nb-extensions nbbrowserpdf

- name: Install conda auto completion
  shell: conda install argcomplete

- name: Enable conda auto completion
  lineinfile:
    dest="~/.bash_profile"
    regexp=''
    insertafter=EOF
    create=False
    line='eval "$(register-python-argcomplete conda)"'
  when: tmp_anaconda_install.stat.exists == False
  tags: bash_profile

- name: Jupyter table of contents
  shell: |
    jupyter nbextension install --user https://rawgithub.com/minrk/ipython_extensions/master/nbextensions/toc.js
    curl -L https://rawgithub.com/minrk/ipython_extensions/master/nbextensions/toc.css > $(jupyter --data-dir)/nbextensions/toc.css
    jupyter nbextension enable toc

